version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto21
    commands:
      - echo Installing Maven...
      - curl -sSL https://apache.osuosl.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.zip -o maven.zip
      - unzip -q maven.zip
      - export M2_HOME=$PWD/apache-maven-3.9.6
      - export PATH=$M2_HOME/bin:$PATH
      - export JAVA_HOME=/usr/lib/jvm/java-21-amazon-corretto
      - java -version
      - mvn -version

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 886436949122.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=886436949122.dkr.ecr.ap-south-1.amazonaws.com/project-management-tool
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Building the project with Maven...
      - mvn clean package -DskipTests -Dmaven.compiler.release=21 --no-transfer-progress

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing imagedefinitions.json...
      - printf '[{"name":"project-management-tool","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Updating ECS service with new image...
      - |
        ECS_SERVICE_ARN=$(aws ecs describe-services --cluster project-management-tool-cluster --services project-management-tool-service --query 'services[0].serviceArn' --output text --region ap-south-1)
        if [ "$ECS_SERVICE_ARN" = "None" ]; then
          echo "Service does not exist. Creating ECS service..."
          aws ecs create-service \
            --cluster project-management-tool-cluster \
            --service-name project-management-tool-service \
            --task-definition project-management-tool-task:1 \
            --desired-count 1 \
            --launch-type FARGATE \
            --network-configuration "{\"awsvpcConfiguration\":{\"subnets\":[\"subnet-01167b9d1ce4b8684\"],\"securityGroups\":[\"sg-036ff208c85057bd3\"],\"assignPublicIp\":\"ENABLED\"}}" \
            --region ap-south-1
        else
          echo "Service exists, updating ECS service with new image..."
          aws ecs update-service --cluster project-management-tool-cluster --service project-management-tool-service --force-new-deployment --region ap-south-1
        fi

artifacts:
  files:
    - imagedefinitions.json
